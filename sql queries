-- CREATE DATABASE AND TABLE 
create database retail_sales_analysis;
use retail_sales_analysis;
select*from retail_sales;
describe retail_sales;

-- DATA EXPLORATION AND CLEANING
-- DATATYPE CHNAGE
alter TABLE retail_sales 
modify column sale_date DATE;
alter TABLE retail_sales 
modify column sale_time time;
 -- COLUMN NAME CHANGE
 alter table retail_sales 
 rename column `ï»¿transactions_id`to `transactions_id`;
 alter table retail_sales 
 rename column `quantiy`to `quantity`;
 -- NULL VALUE CHECK
 SELECT * FROM retail_sales
WHERE 
   transactions_id  is null or  sale_date IS NULL OR sale_time IS NULL OR customer_id IS NULL OR 
    gender IS NULL OR age IS NULL OR category IS NULL OR 
    quantity IS NULL OR price_per_unit IS NULL OR cogs IS NULL;
    
-- DATA ANALYSIS AND FINDING
-- Write a SQL query to retrieve all columns for sales made on 2022-11-05
SELECT * FROM retail_sales where sale_date = '2022-11-05';

-- Write a SQL query to retrieve all transactions 
-- where the category is 'Clothing' and the quantity sold is more than 4 in the month of Nov-2022
select * from retail_sales where category ='clothing'
and date_format(sale_date,'%Y-%m')='2022-11'
and quantity >=4

-- Write a SQL query to calculate the total sales (total_sale) for each category
select category, sum(total_sale) as Total_sales from retail_sales group by category;

-- Write a SQL query to find the average age of customers who purchased items from the 'Beauty' category
select category,avg(age) as avrage_age from retail_sales where category ='beauty';

-- Write a SQL query to find all transactions where the total_sale is greater than 1000
select * from retail_sales where total_sale>='1000';

-- Write a SQL query to find the total number of transactions (transaction_id) made by each gender in each category
select gender,category, count(transactions_id) as total_transaction  from retail_sales group by gender,category;

-- Write a SQL query to find the top 5 customers based on the highest total sales
select customer_id ,sum(total_sale) as highest_sale  from retail_sales group by customer_id order by highest_sale desc limit 5 ;

-- Write a SQL query to find the number of unique customers who purchased items from each category
select category ,count(distinct customer_id) as unique_customer from retail_sales group by category;

-- Write a SQL query to create each shift and 
-- number of orders (Example Morning <12, Afternoon Between 12 & 17, Evening >17
select CASE 
when time_format(sale_time,'%H')<12 THEN 'MORNING'
WHEN TIME_FORMAT(sale_time,'%H')BETWEEN 12 AND 17 THEN 'AFTERNOON' 
ELSE 'EVENING' END AS SHIFT,COUNT(customer_id) AS TOTAL_ORDERS from retail_sales GROUP BY SHIFT;
























